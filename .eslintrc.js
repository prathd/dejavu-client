module.exports = {
  root: true,
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaVersion: 2019,
    sourceType: "module",
    ecmaFeatures: {
      impliedStrict: true,
      jsx: true,
      project: "./tsconfig.json",
      tsconfigRootDir: "./",
    },
  },
  env: {
    node: true,
    browser: true,
    es6: true,
    mocha: true,
    jasmine: true,
    jest: true,
  },
  extends: [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "airbnb",
    "prettier",
    "prettier/react",
    "prettier/@typescript-eslint",
  ],
  plugins: ["@typescript-eslint", "json", "prettier", "react", "react-hooks", "baseui"],
  rules: {
    "no-use-before-define": "off",
    "baseui/deprecated-theme-api": "warn",
    "baseui/deprecated-component-api": "warn",
    "baseui/no-deep-imports": "warn",
    "@typescript-eslint/ban-ts-comment": "off",
    "no-redeclare": "off",
    "dot-notation": "off",
    "import/extensions": "off",
    "import/no-unresolved": "off",
    "import/prefer-default-export": "off",
    "import/order": "off",
    "no-console": ["error", { allow: ["info", "warn", "error"] }],
    "no-extra-boolean-cast": "warn",
    "no-shadow": "off",
    "no-alert": "off",
    "no-plusplus": "off",
    "no-restricted-syntax": "off",
    "one-var": "off",
    "no-underscore-dangle": "off",
    "no-return-assign": "off",
    "react/button-has-type": "off",
    "react-hooks/rules-of-hooks": "error",
    "react/no-unescaped-entities": "off",
    "react/jsx-props-no-spreading": "off",
    "react/prop-types": 0,
    "@typescript-eslint/no-var-requires": "off",
    "react/jsx-filename-extension": "off",
    "react/forbid-prop-types": "off",
    "react/require-default-props": "off",
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "no-undef": "off",
    "no-unused-expressions": [2, { allowTernary: true }],
    "no-unused-vars": "warn",
    "@typescript-eslint/no-unused-vars": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "jsx-a11y/no-autofocus": "off",
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        components: ["Link"],
        specialLink: ["hrefLeft", "hrefRight"],
        aspects: ["invalidHref", "preferButton"],
      },
    ],
    "jsx-a11y/label-has-associated-control": 1,
    "jsx-a11y/label-has-for": 1,
  },
  settings: {
    react: {
      pragma: "React",
      version: "detect",
    },
  },
};
